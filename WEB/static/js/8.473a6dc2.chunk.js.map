{"version":3,"sources":["views/About/components/RoadMap/RoadMap.jsx","views/About/About.jsx"],"names":["dataStep","label","list","text","links","transitionStyles","entering","transform","entered","exiting","exited","RoadMap","useState","percent","setPercent","step","setStep","className","height","map","data","i","accomplished","transitionState","position","style","tag","item","txt","j","length","href","target","rel","onClick","About"],"mappings":"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","file":"static/js/8.473a6dc2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardBody, CardTitle } from 'reactstrap'\nimport { ProgressBar, Step } from \"react-step-progress-bar\"\nimport \"react-step-progress-bar/styles.css\"\n\nconst dataStep = [\n    {\n        label: \"The Beginning\",\n        list: [\n            { text: [\"Discord\", \"Twitter\"], links: [\"https://discord.gg/AM65VtvP2Q\", \"https://twitter.com/RPSGamesClub\"] },\n            { text: [\"Website & Gameplay (Polygon)\"] }\n        ]\n    },\n    {\n        label: 'Welcome SOLANA',\n        list: [\n            { text: [\"Multichain Gameplay (Solana)\"] },\n            { text: [\"Solana NFTs\"] },\n        ]\n    },\n    {\n        label: 'Multichain Project',\n        list: [\n            { text: [\"Ronin (Gameplay)\"] },\n            { text: [\"Polkadot (Gameplay)\"] },\n            { text: [\"Binance Smart Chain (Gameplay)\"] },\n        ]\n    },\n    {\n        label: 'More than RPS',\n        list: [\n            { text: [\"Welcome Games Club\"] },\n            { text: [\"New gameplay\"] },\n        ]\n    }\n];\n\nconst transitionStyles = {\n    entering: { transform: \"scale(1.5)\" },\n    entered: { transform: \"scale(1)\" },\n    exiting: { transform: \"scale(1.5)\" },\n    exited: { transform: \"scale(1)\" }\n};\n\nconst RoadMap = () => {\n    const [percent, setPercent] = useState(0);\n    const [step, setStep] = useState(0);\n\n    const nextStep = () => {\n        if (step < dataStep.length - 1) {\n            setPercent((step * 100 + 100) / (dataStep.length - 1));\n            setStep(step + 1);\n        }\n    }\n\n    const prevStep = () => {\n        if (step > 0) {\n            setPercent((step * 100 - 100) / (dataStep.length - 1));\n            setStep(step - 1);\n        }\n    }\n\n    return (\n        <div className=\"roadmap\">\n            <h3 className='heading-black text-capitalize text-center my-5'>Roadmap</h3>\n            <ProgressBar\n                percent={percent}\n                className='roadmap-pb'\n                // filledBackground=\"#bbbbbb\"\n                height=\"5px\">\n\n                {\n                    dataStep.map((data, i) => {\n                        return <Step key={`roadmap-label-${i}`} >\n                            {\n                                ({ accomplished, transitionState, position }) => (\n                                    <div\n                                        style={transitionStyles[transitionState]}\n                                        className={`indexedStep ${accomplished ? 'accomplished' : ''} ${percent === position ? 'current' : ''}`}>\n                                        {percent > position ? <i className='fa-solid fa-check' /> : ''}\n                                        <p className={`roadmap-label ${accomplished ? 'accomplished' : ''}`}>{data.label}</p>\n                                    </div>\n                                )\n                            }\n                        </Step>\n                    })\n                }\n\n            </ProgressBar>\n\n            <Card className='mt-5 roadmap-card'>\n                <CardBody>\n                    <CardTitle tag=\"h5\">\n                        {dataStep[step].label}\n                    </CardTitle>\n\n                    <ul>\n                        {dataStep[step].list.map((item, i) => {\n                            if (item.links) {\n                                return <li key={`li-${i}`}>\n                                    {\n                                        item.text.map((txt, j) => {\n                                            if (j < item.text.length - 1) {\n                                                return <span key={`link-${j}`}><i className=\"fa-solid fa-hashtag\"></i>&nbsp;<a className=\"roadmap-link\" href={item.links[j]} target=\"_blank\" rel=\"noopener noreferrer\">{txt}</a> & </span>\n                                            } else {\n                                                return <a className=\"roadmap-link\" key={`link-${j}`} href={item.links[j]} target=\"_blank\" rel=\"noopener noreferrer\">{txt}</a>\n                                            }\n                                        })\n                                    }\n                                </li>\n                            } else {\n                                return <li key={`li-${i}`}>\n                                    {\n                                        item.text.map((txt, j) => {\n                                            return <span key={`txt-${j}`}><i className=\"fa-solid fa-hashtag\"></i>&nbsp;{txt}</span>\n                                        })\n                                    }\n                                </li>\n                            }\n                        })}\n                    </ul>\n                </CardBody>\n            </Card>\n\n            <div className='text-end'>\n                <button className='btn btn-transparent' onClick={prevStep}>\n                    <i className={`fa-solid fa-angle-left ${step === 0 ? 'arrow-default' : 'arrow-highlight'}`} />\n                </button>\n                <button className='btn btn-transparent' onClick={nextStep}>\n                    <i className={`fa-solid fa-angle-right ${step < (dataStep.length - 1) ? 'arrow-highlight' : 'arrow-default'}`} />\n                </button>\n                {/* <Button color='secondary' onClick={prevStep}>\n                    <i className='fa-solid fa-arrow-left'></i>&nbsp;Back\n                </Button>\n\n                <Button color='primary' onClick={nextStep}>\n                    Next&nbsp;<i className='fa-solid fa-arrow-right'></i>\n                </Button> */}\n            </div>\n        </div>\n    );\n}\n\nexport default RoadMap","import React from 'react'\nimport \"react-step-progress-bar/styles.css\";\nimport RoadMap from './components/RoadMap/RoadMap';\n// import FAQ from './components/FAQ/FAQ';\n\nconst About = () => {\n\n  return (\n    <div className='container'>\n      <div className='row pt-5'>\n        <div className='col-md-8 col-sm-10 col-12 mx-auto my-auto'>\n          <h1 className='heading-black text-capitalize'>Games Club</h1>\n          <p className='lead py-3'>\n            Our vision is to create a platform where all the games are random and fair, we don't want to became a casino. <br />\n            Via the implementation of Smart Contracts and Oracles we can develop completely randomized games with 50% 50% chances\n            that allow gamers to have a real shot when playing.\n            Games Club's wallet receives <strong>3.5%</strong> of each transaction made in our platform, these funds will be used\n            to reward our NFT's holders (2.5%) and to develop/upgrade new services in our platform (1%). <br />\n            We are already working on new games for the future that are equally transparent and fair for all of our users.\n          </p>\n\n          <h2>MultiChain Development</h2>\n          <p className='lead'>\n            Our main goal is to expand ourselves into many different BlockChains, this is a differentiating factor and creates an\n            unprecedented bridge between the main NFT communities.<br />\n            We will start our growth in the uprising Polygon Chain followed by the consolidated Solana Ecosystem.\n          </p>\n        </div>\n      </div>\n\n      <RoadMap />\n\n      {/* <FAQ /> */}\n    </div>\n  );\n}\n\nexport default About;"],"sourceRoot":""}