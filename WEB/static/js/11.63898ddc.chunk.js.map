{"version":3,"sources":["views/RPSDemo/components/Modals/Modals.jsx","views/RPSDemo/RPSDemo.jsx"],"names":["RpsImage","props","className","src","image","imageRock","imagePaper","imageScissors","alt","Rock","type","name","id","onChange","handleInputChange","value","Paper","Scissors","Amounts","amount","Play","userhand","imageRockGIF","imagePaperGIF","imageScissorsGIF","imageVS","rotatingCard","useramount","save","onClick","showResult","disabled","gameLog","Spinner","as","animation","size","role","bordeless","gameId","Result","imageResult","gameResult","RockWin","PaperWin","ScissorsWin","RockLose","PaperLose","ScissorsLose","result","options","autoresize","opacity","acceleration","friction","gravity","particles","traceSpeed","explosion","intensity","flickering","lineStyle","hue","min","max","delay","rocketsPoint","lineWidth","trace","brightness","decay","mouse","click","move","sound","enabled","files","volume","style","top","left","width","height","position","background","bannerWin","bannerLose","Star","color","backGame","GameLogo","RPSGames","GamePanel","age","playing","verifyGame","randomItem","usergame","busyNetwork","hand","matic","RPSDemo","screen","useRef","useState","setUsergame","setRandomItem","setGameResult","active","setActive","setPlaying","setAnimation","setResult","setSave","load","setLoad","music","Audio","winSound","window","localStorage","getItem","useEffect","current","scrollIntoView","behavior","toast","error","document","getElementById","checked","arrayOptions","Math","random","length","toastOptions","duration","icon","win1","win2","iconTheme","primary","secondary","ariaProps","play","event","target","randomArray","ref"],"mappings":"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","file":"static/js/11.63898ddc.chunk.js","sourcesContent":["import { Spinner } from \"react-bootstrap\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Fireworks } from \"@fireworks-js/react\";\r\n\r\n// Game Logo\r\nimport RPSGames from \"../../../../assets/imgs/Home_Page/RPS Games.png\";\r\n\r\n// Bet panel\r\nimport imageRock from \"../../../../assets/imgs/Bet_Screen/imageRock.png\";\r\nimport imagePaper from \"../../../../assets/imgs/Bet_Screen/imagePaper.png\";\r\nimport imageScissors from \"../../../../assets/imgs/Bet_Screen/imageScissors.png\";\r\nimport matic from \"../../../../assets/imgs/Bet_Screen/matic.png\";\r\n\r\n// Play panel\r\nimport imageRockGIF from \"../../../../assets/imgs/Bet_Screen/RockUnselectedGIF.gif\";\r\nimport imagePaperGIF from \"../../../../assets/imgs/Bet_Screen/PaperUnselectedGIF.gif\";\r\nimport imageScissorsGIF from \"../../../../assets/imgs/Bet_Screen/ScissorsUnselectedGIF.gif\";\r\n\r\nimport imageVS from \"../../../../assets/imgs/Bet_Screen/VStext.png\";\r\n\r\nimport rotatingCard from \"../../../../assets/imgs/Bet_Screen/RotatingCard.gif\";\r\n\r\n// Result panel\r\nimport RockWin from \"../../../../assets/imgs/Win_Lose_Screens/RockWin.gif\";\r\nimport RockLose from \"../../../../assets/imgs/Win_Lose_Screens/RockLose.gif\";\r\n\r\nimport PaperWin from \"../../../../assets/imgs/Win_Lose_Screens/PaperWin.gif\";\r\nimport PaperLose from \"../../../../assets/imgs/Win_Lose_Screens/PaperLose.gif\";\r\n\r\nimport ScissorsWin from \"../../../../assets/imgs/Win_Lose_Screens/ScissorsWin.gif\";\r\nimport ScissorsLose from \"../../../../assets/imgs/Win_Lose_Screens/ScissorsLose.gif\";\r\n\r\nimport bannerLose from \"../../../../assets/imgs/Win_Lose_Screens/bannerLose.png\";\r\nimport bannerWin from \"../../../../assets/imgs/Win_Lose_Screens/bannerWin.png\";\r\n\r\nimport Star from \"../../../../assets/imgs/Win_Lose_Screens/star.png\";\r\n\r\nexport const RpsImage = (props) => {\r\n  return (\r\n    <div className=\"gameAntes col-3 col-md-2\">\r\n      <img\r\n        className=\"my-3 image-game\"\r\n        src={\r\n          (props.image === \"Rock\" && imageRock) ||\r\n          (props.image === \"Paper\" && imagePaper) ||\r\n          (props.image === \"Scissors\" && imageScissors)\r\n        }\r\n        alt=\"Rock\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Rock = (props) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"hand\"\r\n        id=\"rock\"\r\n        onChange={props.handleInputChange}\r\n        value=\"ROCK\"\r\n      ></input>\r\n      <div className=\"rps-img rock-img\"></div>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst Paper = (props) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"hand\"\r\n        id=\"paper\"\r\n        onChange={props.handleInputChange}\r\n        value=\"PAPER\"\r\n      ></input>\r\n      <div className=\"rps-img paper-img\"></div>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst Scissors = (props) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"hand\"\r\n        id=\"scissors\"\r\n        onChange={props.handleInputChange}\r\n        value=\"SCISSORS\"\r\n      ></input>\r\n      <div className=\"rps-img scissors-img\"></div>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst Amounts = (props) => {\r\n  return (\r\n    <>\r\n      <label className=\"amount\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"amount\"\r\n          onChange={props.handleInputChange}\r\n          value={props.amount}\r\n        />\r\n        <p>{props.amount}</p>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Play = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"processing-game\">\r\n        <img\r\n          className=\"card-selected\"\r\n          src={\r\n            (props.userhand === \"ROCK\" && imageRockGIF) ||\r\n            (props.userhand === \"PAPER\" && imagePaperGIF) ||\r\n            (props.userhand === \"SCISSORS\" && imageScissorsGIF)\r\n          }\r\n        />\r\n        <img className=\"vs\" src={imageVS} />\r\n        <img className=\"rotating-card\" src={rotatingCard} />\r\n      </div>\r\n      <h3>\r\n        <span className=\"text-playing\">Playing {props.userhand} for</span>\r\n        <br />\r\n        <span className=\"valor-matic\">{props.useramount + \" MATIC\"}</span>\r\n      </h3>\r\n      <div>\r\n        {props.save ? (\r\n          <button className=\"DoubleOrNothing\" onClick={props.showResult}>\r\n            SHOW RESULT\r\n          </button>\r\n        ) : (\r\n          <div className=\"playing\">\r\n            <button disabled>\r\n              {props.gameLog}\r\n              &nbsp;&nbsp;\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </button>\r\n            <div>\r\n              <Table className=\"tabla-pequena\" bordeless=\"true\" size=\"lg\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"text-yellow\">ID</th>\r\n                    <th className=\"text-yellow\">Hand</th>\r\n                    <th className=\"text-yellow\">Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{props.gameId ? props.gameId : \"-\"}</td>\r\n                    <td>{props.userhand}</td>\r\n                    <td>{props.useramount}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Result = (props) => {\r\n  var imageResult;\r\n\r\n  if (props.gameResult) {\r\n    if (props.userhand === \"ROCK\") {\r\n      imageResult = RockWin;\r\n    }\r\n    if (props.userhand === \"PAPER\") {\r\n      imageResult = PaperWin;\r\n    }\r\n    if (props.userhand === \"SCISSORS\") {\r\n      imageResult = ScissorsWin;\r\n    }\r\n  } else {\r\n    if (props.userhand === \"ROCK\") {\r\n      imageResult = RockLose;\r\n    }\r\n    if (props.userhand === \"PAPER\") {\r\n      imageResult = PaperLose;\r\n    }\r\n    if (props.userhand === \"SCISSORS\") {\r\n      imageResult = ScissorsLose;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"relative-result-img\">\r\n        {props.result && props.gameResult && (\r\n          <Fireworks\r\n            options={{\r\n              autoresize: true,\r\n              opacity: 0.5,\r\n              acceleration: 1.02,\r\n              friction: 0.97,\r\n              gravity: 1.5,\r\n              particles: 50,\r\n              traceSpeed: 10,\r\n              explosion: 6,\r\n              intensity: 30,\r\n              flickering: 50,\r\n              lineStyle: \"round\",\r\n              hue: {\r\n                min: 0,\r\n                max: 360,\r\n              },\r\n              delay: {\r\n                min: 30,\r\n                max: 60,\r\n              },\r\n              rocketsPoint: {\r\n                min: 50,\r\n                max: 50,\r\n              },\r\n              lineWidth: {\r\n                explosion: {\r\n                  min: 1,\r\n                  max: 4,\r\n                },\r\n                trace: {\r\n                  min: 0.1,\r\n                  max: 1,\r\n                },\r\n              },\r\n              brightness: {\r\n                min: 50,\r\n                max: 80,\r\n              },\r\n              decay: {\r\n                min: 0.001,\r\n                max: 0.05,\r\n              },\r\n              mouse: {\r\n                click: false,\r\n                move: false,\r\n                max: 1,\r\n              },\r\n              sound: {\r\n                enabled: props.sound === \"on\" ? true : false,\r\n                files: [\r\n                  \"https://fireworks.js.org/sounds/explosion0.mp3\",\r\n                  \"https://fireworks.js.org/sounds/explosion1.mp3\",\r\n                  \"https://fireworks.js.org/sounds/explosion2.mp3\",\r\n                ],\r\n                volume: {\r\n                  min: 4,\r\n                  max: 8,\r\n                },\r\n              },\r\n            }}\r\n            style={{\r\n              top: 20,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              position: \"fixed\",\r\n              background: \"transparent\",\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"anim-win-lose\">\r\n          <img className=\"result-rps-image\" src={imageResult} />\r\n        </div>\r\n        <div>\r\n          <img\r\n            className=\"absolute-image\"\r\n            src={props.gameResult ? bannerWin : bannerLose}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex flex-column justify-content-between mx-auto mt-4\">\r\n        <div className=\"d-flex flex-column justify-content-center\">\r\n          <span className=\"rps-result-title\">\r\n            <p className=\"text-result-game text-white\">\r\n              {props.gameResult ? \"You won\" : \"You lost\"}\r\n            </p>\r\n          </span>\r\n          <div className=\"resultado-flex\">\r\n            {props.gameResult && <img src={Star} />}\r\n            <span\r\n              className=\"rps-result-amount\"\r\n              style={{\r\n                color: props.gameResult ? \"#f1cf61\" : \"#9845eb\",\r\n              }}\r\n            >\r\n              {props.gameResult ? props.useramount * 2 : props.useramount}\r\n              {\" MATIC\"}\r\n            </span>\r\n            {props.gameResult && <img src={Star} />}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"d-flex flex-column align-items-center\">\r\n            {!props.gameResult && (\r\n              <span className=\"processing-title text-white\">TRY AGAIN?</span>\r\n            )}\r\n            <button className=\"DoubleOrNothing\" onClick={props.backGame}>\r\n              {props.gameResult ? \"CLAIM REWARD\" : \"DOUBLE OR NOTHING\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const GameLogo = () => {\r\n  return (\r\n    <div className=\"left-content-rps\">\r\n      <img src={RPSGames} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GamePanel = ({\r\n  age,\r\n  playing,\r\n  animation,\r\n  result,\r\n  verifyGame,\r\n  randomItem,\r\n  save,\r\n  gameLog,\r\n  gameId,\r\n  usergame,\r\n  busyNetwork,\r\n  gameResult,\r\n  showResult,\r\n  backGame,\r\n  sound,\r\n  handleInputChange,\r\n}) => {\r\n  return (\r\n    <div className=\"game-container\">\r\n      {playing ? (\r\n        <div className=\"game-playing-container\">\r\n          {animation && (\r\n            <Play\r\n              save={save}\r\n              gameLog={gameLog}\r\n              gameId={gameId}\r\n              userhand={usergame.hand}\r\n              useramount={usergame.amount}\r\n              busyNetwork={busyNetwork}\r\n              showResult={showResult}\r\n            />\r\n          )}\r\n          {result && (\r\n            <Result\r\n              userhand={usergame.hand}\r\n              useramount={usergame.amount}\r\n              gameResult={gameResult}\r\n              result={result}\r\n              sound={sound}\r\n              backGame={backGame}\r\n            />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"text-container\">\r\n            <p>Select your bet:</p>\r\n          </div>\r\n\r\n          <div className=\"game-selection-hand\">\r\n            {randomItem === \"a\" && (\r\n              <>\r\n                <Rock handleInputChange={handleInputChange} />\r\n                <Paper handleInputChange={handleInputChange} />\r\n                <Scissors handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n            {randomItem === \"b\" && (\r\n              <>\r\n                <Rock handleInputChange={handleInputChange} />\r\n                <Scissors handleInputChange={handleInputChange} />\r\n                <Paper handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n            {randomItem === \"c\" && (\r\n              <>\r\n                <Paper handleInputChange={handleInputChange} />\r\n                <Scissors handleInputChange={handleInputChange} />\r\n                <Rock handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n            {randomItem === \"d\" && (\r\n              <>\r\n                <Paper handleInputChange={handleInputChange} />\r\n                <Rock handleInputChange={handleInputChange} />\r\n                <Scissors handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n            {randomItem === \"e\" && (\r\n              <>\r\n                <Scissors handleInputChange={handleInputChange} />\r\n                <Rock handleInputChange={handleInputChange} />\r\n                <Paper handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n            {randomItem === \"f\" && (\r\n              <>\r\n                <Scissors handleInputChange={handleInputChange} />\r\n                <Paper handleInputChange={handleInputChange} />\r\n                <Rock handleInputChange={handleInputChange} />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"text-container-amounts\">\r\n            <p>Select the amount to bet:</p>\r\n          </div>\r\n          <div className=\"MaticGeneral d-flex align-items-center justify-content-center\">\r\n            <img className=\"imgMatic\" src={matic} alt=\"Matic\" />\r\n            <Amounts handleInputChange={handleInputChange} amount={1} />\r\n            <Amounts handleInputChange={handleInputChange} amount={2} />\r\n            <Amounts handleInputChange={handleInputChange} amount={5} />\r\n            <Amounts handleInputChange={handleInputChange} amount={10} />\r\n            <Amounts handleInputChange={handleInputChange} amount={25} />\r\n            <Amounts handleInputChange={handleInputChange} amount={50} />\r\n          </div>\r\n\r\n          <button\r\n            onClick={verifyGame}\r\n            className=\"DoubleOrNothing\"\r\n            disabled={playing}\r\n          >\r\n            DOUBLE OR NOTHING\r\n          </button>\r\n          {age === \"false\" && (\r\n            <p className=\"text-center mb-3 mt-3\">\r\n              <label className=\"switch\">\r\n                <input id=\"age\" type=\"checkbox\"></input>\r\n                &nbsp;\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <span className=\"text-white\">I confirm that I am at least</span>\r\n              <span style={{ color: \"#ffdb5b\" }}> 18 years old</span>\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useRef, useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport winSound from \"../../assets/audio/win_sound.mpeg\";\nimport win1 from \"../../assets/imgs/Win_Lose_Screens/win1.gif\";\nimport win2 from \"../../assets/imgs/Win_Lose_Screens/win2.png\";\nimport { GameLogo, RpsImage, GamePanel } from \"./components/Modals/Modals\";\n\nconst RPSDemo = () => {\n  const screen = useRef(null);\n  const [usergame, setUsergame] = useState({ hand: \"\", amount: 0 });\n  const [randomItem, setRandomItem] = useState(\"\");\n  const [gameResult, setGameResult] = useState(false);\n  const [active, setActive] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [animation, setAnimation] = useState(false);\n  const [result, setResult] = useState(false);\n  const [save, setSave] = useState(false);\n  const [load, setLoad] = useState(false);\n\n  const music = new Audio(winSound);\n\n  const age = window.localStorage.getItem(\"age\");\n  const sound = window.localStorage.getItem(\"sound\");\n\n  useEffect(() => {\n    setLoad(true);\n  }, []);\n\n  const handleInputChange = (event) => {\n    setUsergame({\n      ...usergame,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const scrollToBottom = () => {\n    screen.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [load, active, playing]);\n\n  const openGame = () => {\n    let arrayOptions = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n    var randomArray = (Math.random() * arrayOptions.length) | 0;\n    var result = arrayOptions[randomArray];\n    setRandomItem(result);\n    setActive(true);\n  };\n\n  const doubleOrNothing = () => {\n    if (usergame.hand === \"\") {\n      toast.error(\"Select a hand\");\n      return false;\n    }\n    if (usergame.amount === 0) {\n      toast.error(\"Select an amount\");\n      return false;\n    }\n\n    if (age === \"false\" || age === null) {\n      if (document.getElementById(\"age\").checked === false) {\n        toast.error(\"Confirm that you are at least 18 years old\");\n        return false;\n      }\n    }\n\n    setPlaying(true);\n    setAnimation(true);\n    setSave(true);\n  };\n\n  const showResult = () => {\n    setGameResult(true);\n    setAnimation(false);\n    setResult(true);\n    let arrayOptions = [\"a\", \"b\"];\n    var randomArray = (Math.random() * arrayOptions.length) | 0;\n    var result = arrayOptions[randomArray];\n    const toastOptions = {\n      duration: 5000,\n      position: \"bottom-left\",\n      style: {},\n      className: \"pop-up toast-modal\",\n      icon: (\n        <img src={result === \"a\" ? win1 : win2} width=\"25\" height=\"25\" alt=\"\" />\n      ),\n      iconTheme: {\n        primary: \"#000\",\n        secondary: \"#fff\",\n      },\n      ariaProps: {\n        role: \"status\",\n        \"aria-live\": \"polite\",\n      },\n    };\n\n    if (sound === \"on\") {\n      music.play();\n    }\n    toast(\n      gameResult === \"a\"\n        ? \"You doubled your money!!\"\n        : \"You are doing some business here\",\n      toastOptions\n    );\n\n    setSave(false);\n    setAnimation(false);\n  };\n\n  const backGame = () => {\n    setUsergame({ hand: \"\", amount: 0 });\n    setGameResult(false);\n    setPlaying(false);\n    setAnimation(false);\n    setResult(false);\n  };\n\n  return (\n    <>\n      <GameLogo />\n      <article>\n        {active ? (\n          <GamePanel\n            age={age}\n            playing={playing}\n            animation={animation}\n            result={result}\n            randomItem={randomItem}\n            save={save}\n            usergame={usergame}\n            gameResult={gameResult}\n            verifyGame={doubleOrNothing}\n            showResult={showResult}\n            backGame={backGame}\n            handleInputChange={handleInputChange}\n            sound={sound}\n          />\n        ) : (\n          <>\n            <div className=\"game-gifs-wrapper\">\n              <RpsImage image=\"Rock\" />\n              <RpsImage image=\"Paper\" />\n              <RpsImage image=\"Scissors\" />\n            </div>\n            <div className=\"center\">\n              <button className=\"DoubleOrNothing\" onClick={openGame}>\n                DOUBLE OR NOTHING\n              </button>\n            </div>\n          </>\n        )}\n        <div ref={screen}></div>\n      </article>\n    </>\n  );\n};\n\nexport default RPSDemo;\n"],"sourceRoot":""}