{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../../src/utils.ts","../../src/chart.tsx","../../src/typedCharts.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","slice","ticking","rest","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","noop","uid","id","isNullOrUndef","value","isArray","type","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","map","create","klen","k","isValidKey","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","split","set","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","get","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_element","afterInit","afterDraw","_willRender","afterEvent","handleEvent","labelCount","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","nextOptions","role","forwardRef","createTypedChart","registerables","Line"],"mappings":"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","file":"static/js/6.007a2222.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  chart.options = { ...nextOptions };\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options,\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"sourceRoot":""}